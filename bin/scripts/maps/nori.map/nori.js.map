{"version":3,"sources":["Cookie.js","Dispatcher.js","Keyboard.js","MixinObservableSubject.js","Renderer.js","Router.js","Rx.js","Templating.js","ActionConstants.js","ActionCreator.js","Rest.js","SocketIO.js","Map.js","MapCollection.js","MixinMapFactory.js","MixinReducerStore.js","SimpleStore.js","ApplicationView.js","MixinBrowserEvents.js","MixinComponentViews.js","MixinEventDelegator.js","MixinModelStateViews.js","MixinNudoruControls.js","MixinRouteViews.js","ViewComponent.js","Nori.js"],"names":[],"mappingspvpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxhthVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjtvxnrrjfile":"nori.js","sourcesContent":["define('nori/utils/Cookie',\n  function (require, module, exports) {\n\n    var Cookie = function () {\n\n      function create(name, value, days) {\n        var expires = \"\", date;\n        if (days) {\n          date    = new Date();\n          date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n          expires = \"; expires=\" + date.toGMTString();\n        }\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\n      }\n\n      function read(name) {\n        var nameEQ = name + \"=\",\n            ca     = document.cookie.split(';'),\n            i, c;\n\n        i = ca.length;\n        while (i--) {\n          c = ca[i];\n          while (c.charAt(0) === ' ') {\n            c = c.substring(1, c.length);\n          }\n          if (c.indexOf(nameEQ) === 0) {\n            return c.substring(nameEQ.length, c.length);\n          }\n        }\n        return null;\n      }\n\n      function remove(name) {\n        create(name, '', -1);\n      }\n\n      return {\n        create: create,\n        read  : read,\n        remove: remove\n      };\n\n    };\n\n    module.exports = Cookie();\n\n  });","/*\n Matt Perkins, 6/12/15\n\n publish payload object\n\n {\n type: EVT_TYPE,\n payload: {\n key: value\n }\n }\n\n */\n\ndefine('nori/utils/Dispatcher',\n  function (require, module, exports) {\n\n    var Dispatcher = function () {\n\n      var _subjectMap  = {},\n          _receiverMap = {},\n          _id          = 0,\n          _log         = [],\n          _queue       = [],\n          _timerObservable,\n          _timerSubscription,\n          _timerPausable;\n\n      /**\n       * Add an event as observable\n       * @param evtStr Event name string\n       * @param handler onNext() subscription function\n       * @param onceOrContext optional, either the context to execute the hander or once bool\n       * @param once will complete/dispose after one fire\n       * @returns {*}\n       */\n      function subscribe(evtStr, handler, onceOrContext, once) {\n        var handlerContext = window;\n\n        //console.log('dispatcher subscribe', evtStr, handler, onceOrContext, once);\n\n        if (is.falsey(evtStr)) {\n          console.warn('Dispatcher: Fasley event string passed for handler', handler);\n        }\n\n        if (is.falsey(handler)) {\n          console.warn('Dispatcher: Fasley handler passed for event string', evtStr);\n        }\n\n        if (onceOrContext || onceOrContext === false) {\n          if (onceOrContext === true || onceOrContext === false) {\n            once = onceOrContext;\n          } else {\n            handlerContext = onceOrContext;\n          }\n        }\n\n        if(!_subjectMap[evtStr]) {\n          _subjectMap[evtStr] = [];\n        }\n\n        var subject = new Rx.Subject();\n\n        _subjectMap[evtStr].push({\n          once    : once,\n          priority: 0,\n          handler : handler,\n          context : handlerContext,\n          subject : subject,\n          type    : 0\n        });\n\n        return subject.subscribe(handler.bind(handlerContext));\n      }\n\n      /**\n       * Initialize the event processing timer or resume a paused timer\n       */\n      function initTimer() {\n        if (_timerObservable) {\n          _timerPausable.onNext(true);\n          return;\n        }\n\n        _timerPausable     = new Rx.Subject();\n        _timerObservable   = Rx.Observable.interval(1).pausable(_timerPausable);\n        _timerSubscription = _timerObservable.subscribe(processNextEvent);\n      }\n\n      /**\n       * Shift next event to handle off of the queue and dispatch it\n       */\n      function processNextEvent() {\n        var evt = _queue.shift();\n        if (evt) {\n          dispatchToReceivers(evt);\n          dispatchToSubscribers(evt);\n        } else {\n          _timerPausable.onNext(false);\n        }\n      }\n\n      /**\n       * Push event to the stack and begin execution\n       * @param payloadObj type:String, payload:data\n       * @param data\n       */\n      function publish(payloadObj) {\n        _log.push(payloadObj);\n        _queue.push(payloadObj);\n\n        initTimer();\n      }\n\n      /**\n       * Send the payload to all receivers\n       * @param payload\n       */\n      function dispatchToReceivers(payload) {\n        for (var id in _receiverMap) {\n          _receiverMap[id].handler(payload);\n        }\n      }\n\n      /**\n       * Subscribers receive all payloads for a given event type while handlers are targeted\n       * @param payload\n       */\n      function dispatchToSubscribers(payload) {\n        var subscribers = _subjectMap[payload.type], i;\n        if (!subscribers) {\n          return;\n        }\n\n        i = subscribers.length;\n\n        while (i--) {\n          var subjObj = subscribers[i];\n          if (subjObj.type === 0) {\n            subjObj.subject.onNext(payload);\n          }\n          if (subjObj.once) {\n            unsubscribe(payload.type, subjObj.handler);\n          }\n        }\n      }\n\n      /**\n       * Remove a handler\n       * @param evtStr\n       * @param hander\n       */\n      function unsubscribe(evtStr, handler) {\n        if (_subjectMap[evtStr] === undefined) {\n          return;\n        }\n\n        var subscribers = _subjectMap[evtStr],\n            handlerIdx  = -1;\n\n        for (var i = 0, len = subscribers.length; i < len; i++) {\n          if (subscribers[i].handler === handler) {\n            handlerIdx     = i;\n            subscribers[i].subject.onCompleted();\n            subscribers[i].subject.dispose();\n            subscribers[i] = null;\n          }\n        }\n\n        if (handlerIdx === -1) {\n          return;\n        }\n\n        subscribers.splice(handlerIdx, 1);\n\n        if (subscribers.length === 0) {\n          delete _subjectMap[evtStr];\n        }\n      }\n\n      /**\n       * Return a copy of the log array\n       * @returns {Array.<T>}\n       */\n      function getLog() {\n        return _log.slice(0);\n      }\n\n\n      /**\n       * Simple receiver implementation based on Flux\n       * Registered receivers will get every published event\n       * https://github.com/facebook/flux/blob/master/src/Dispatcher.js\n       *\n       * Usage:\n       *\n       * _dispatcher.registerReceiver(function (payload) {\n       *    console.log('receiving, ',payload);\n       * });\n       *\n       * @param handler\n       * @returns {string}\n       */\n      function registerReceiver(handler) {\n        var id           = 'ID_' + _id++;\n        _receiverMap[id] = {\n          id     : id,\n          handler: handler\n        };\n        return id;\n      }\n\n\n      /**\n       * Remove a receiver handler\n       * @param id\n       */\n      function unregisterReceiver(id) {\n        if (_receiverMap.hasOwnProperty(id)) {\n          delete _receiverMap[id];\n        }\n      }\n\n      return {\n        subscribe         : subscribe,\n        unsubscribe       : unsubscribe,\n        publish           : publish,\n        getLog            : getLog,\n        registerReceiver  : registerReceiver,\n        unregisterReceiver: unregisterReceiver\n      };\n\n    };\n\n    module.exports = Dispatcher();\n\n  });","define('nori/utils/Keyboard',\n  function (require, module, exports) {\n\n    /**\n     * Maps keyboard presses to a handler function\n     * Dependencies: RxJS\n     *\n     * TODO Implement modifiers\n     *\n     * Example\n     var Keyboard = require('nori/utils/Keyboard'),\n     kb = Keyboard();\n     kb.initialize();\n     kb.mapKey(['a','b'],function(key){\n          console.log('Pressed: '+key);\n          kb.unmapKey(['b']);\n        });\n     */\n\n    var Keyboard = function () {\n\n      var _callbackMap = {},\n          _subscription,\n          _keyCodes    = {\n            'backspace'       : '8',\n            'tab'             : '9',\n            'enter'           : '13',\n            'shift'           : '16',\n            'ctrl'            : '17',\n            'alt'             : '18',\n            'pause_break'     : '19',\n            'caps_lock'       : '20',\n            'escape'          : '27',\n            'page_up'         : '33',\n            'page down'       : '34',\n            'end'             : '35',\n            'home'            : '36',\n            'left'            : '37',\n            'up'              : '38',\n            'right'           : '39',\n            'down'            : '40',\n            'insert'          : '45',\n            'delete'          : '46',\n            '0'               : '48',\n            '1'               : '49',\n            '2'               : '50',\n            '3'               : '51',\n            '4'               : '52',\n            '5'               : '53',\n            '6'               : '54',\n            '7'               : '55',\n            '8'               : '56',\n            '9'               : '57',\n            'a'               : '65',\n            'b'               : '66',\n            'c'               : '67',\n            'd'               : '68',\n            'e'               : '69',\n            'f'               : '70',\n            'g'               : '71',\n            'h'               : '72',\n            'i'               : '73',\n            'j'               : '74',\n            'k'               : '75',\n            'l'               : '76',\n            'm'               : '77',\n            'n'               : '78',\n            'o'               : '79',\n            'p'               : '80',\n            'q'               : '81',\n            'r'               : '82',\n            's'               : '83',\n            't'               : '84',\n            'u'               : '85',\n            'v'               : '86',\n            'w'               : '87',\n            'x'               : '88',\n            'y'               : '89',\n            'z'               : '90',\n            'left_window key' : '91',\n            'right_window key': '92',\n            'select_key'      : '93',\n            'numpad 0'        : '96',\n            'numpad 1'        : '97',\n            'numpad 2'        : '98',\n            'numpad 3'        : '99',\n            'numpad 4'        : '100',\n            'numpad 5'        : '101',\n            'numpad 6'        : '102',\n            'numpad 7'        : '103',\n            'numpad 8'        : '104',\n            'numpad 9'        : '105',\n            'multiply'        : '106',\n            'add'             : '107',\n            'subtract'        : '109',\n            'decimal point'   : '110',\n            'divide'          : '111',\n            'f1'              : '112',\n            'f2'              : '113',\n            'f3'              : '114',\n            'f4'              : '115',\n            'f5'              : '116',\n            'f6'              : '117',\n            'f7'              : '118',\n            'f8'              : '119',\n            'f9'              : '120',\n            'f10'             : '121',\n            'f11'             : '122',\n            'f12'             : '123',\n            'num_lock'        : '144',\n            'scroll_lock'     : '145',\n            'semi_colon'      : '186',\n            'equal_sign'      : '187',\n            'comma'           : '188',\n            'dash'            : '189',\n            'period'          : '190',\n            'forward_slash'   : '191',\n            'grave_accent'    : '192',\n            'open_bracket'    : '219',\n            'backslash'       : '220',\n            'closebracket'    : '221',\n            'single_quote'    : '222'\n          };\n\n      /**\n       * Initialize\n       * @param context On which element to listen for key preses on\n       * @param evt 'keydown' or 'keyup'\n       */\n      function initialize(context, evt) {\n\n        context = context || document;\n        evt     = evt || 'keydown';\n\n        var source = Rx.Observable.fromEvent(context, evt);\n\n        _subscription = source.map(function (evt) {\n          return evt.keyCode;\n        }).map(function (code) {\n          return getKeyNameFromCode(code);\n        }).subscribe(handleKeyDown);\n\n      }\n\n      /**\n       * Returns the keymap\n       * @returns {void|*}\n       */\n      function getKeyCodes() {\n        return _.assign({}, _keyCodes);\n      }\n\n      /**\n       * Determines if the key is present in the map\n       * @param key\n       * @returns {boolean}\n       */\n      function isValid(key) {\n        return _keyCodes.hasOwnProperty(key);\n      }\n\n      /**\n       * Maps a string key or array to callback function\n       * @param key string or array\n       * @param callback function to execute when pressed\n       * @param context scope to execute\n       */\n      function mapKey(key, callback, context) {\n        if (typeof key === 'string') {\n          key = [key];\n        }\n\n        key.forEach(function (k) {\n          addKeyCallBack(k, callback, context);\n        });\n      }\n\n      function addKeyCallBack(key, callback, context) {\n        if (isValid(key)) {\n          context           = context || window;\n          _callbackMap[key] = callback.bind(context);\n        }\n      }\n\n      /**\n       * Removes a mapping\n       * @param key string or array\n       */\n      function unmapKey(key) {\n        if (typeof key === 'string') {\n          key = [key];\n        }\n\n        key.forEach(function (k) {\n          removeKeyCallBack(k);\n        });\n      }\n\n      function removeKeyCallBack(key) {\n        delete _callbackMap[key];\n      }\n\n      /**\n       * Execute the callback for a key\n       * @param code\n       */\n      function handleKeyDown(code) {\n        if (_callbackMap.hasOwnProperty(code)) {\n          _callbackMap[code](code);\n        }\n      }\n\n      /**\n       * Gets the name for the key from the key map\n       * @param code\n       * @returns {*}\n       */\n      function getKeyNameFromCode(code) {\n        for (var keyname in _keyCodes) {\n          if (_keyCodes[keyname] === ('' + code)) {\n            return keyname;\n          }\n        }\n        return undefined;\n      }\n\n      function dispose() {\n        _callbackMap = undefined;\n        _subscription.dispose();\n      }\n\n      return {\n        initialize : initialize,\n        getKeyCodes: getKeyCodes,\n        mapKey     : mapKey,\n        unmapKey   : unmapKey,\n        dispose    : dispose\n      };\n\n    };\n\n    module.exports = Keyboard;\n\n  });\n","/**\n * Add RxJS Subject to a module.\n *\n * Add one simple observable subject or more complex ability to create others for\n * more complex eventing needs.\n */\n\ndefine('nori/utils/MixinObservableSubject',\n\n  function (require, module, exports) {\n\n    var MixinObservableSubject = function () {\n\n      var _subject    = new Rx.Subject(),\n          _subjectMap = {};\n\n      /**\n       * Create a new subject\n       * @param name\n       * @returns {*}\n       */\n      function createSubject(name) {\n        if (!_subjectMap.hasOwnProperty(name)) {\n          _subjectMap[name] = new Rx.Subject();\n        }\n        return _subjectMap[name];\n      }\n\n      /**\n       * Subscribe handler to updates. If the handler is a string, the new subject\n       * will be created.\n       * @param handler\n       * @returns {*}\n       */\n      function subscribe(handlerOrName, optHandler) {\n        if (is.string(handlerOrName)) {\n          return createSubject(handlerOrName).subscribe(optHandler);\n        } else {\n          return _subject.subscribe(handlerOrName);\n        }\n      }\n\n      /**\n       * Dispatch updated to subscribers\n       * @param payload\n       */\n      function notifySubscribers(payload) {\n        _subject.onNext(payload);\n      }\n\n      /**\n       * Dispatch updated to named subscribers\n       * @param name\n       * @param payload\n       */\n      function notifySubscribersOf(name, payload) {\n        if (_subjectMap.hasOwnProperty(name)) {\n          _subjectMap[name].onNext(payload);\n        } else {\n          console.warn('MixinObservableSubject, no subscribers of ' + name);\n        }\n      }\n\n      return {\n        subscribe            : subscribe,\n        createSubject        : createSubject,\n        notifySubscribers    : notifySubscribers,\n        notifySubscribersOf  : notifySubscribersOf\n      };\n\n    };\n\n    module.exports = MixinObservableSubject;\n\n  });","/**\n * Utility to handle all view DOM attachment tasks\n */\n\ndefine('nori/utils/Renderer',\n  function (require, module, exports) {\n\n    var Renderer = function () {\n      var _domUtils = require('nudoru/browser/DOMUtils');\n\n      function render(payload) {\n        var targetSelector = payload.target,\n            html           = payload.html,\n            domEl,\n            mountPoint     = document.querySelector(targetSelector),\n            cb             = payload.callback;\n\n        mountPoint.innerHTML = '';\n\n        if (html) {\n          domEl = _domUtils.HTMLStrToNode(html);\n          mountPoint.appendChild(domEl);\n        }\n\n        if (cb) {\n          cb(domEl);\n        }\n\n        return domEl;\n      }\n\n      return {\n        render: render\n      };\n\n    };\n\n    module.exports = Renderer();\n\n  });","/**\n * Simple router\n * Supporting IE9 so using hashes instead of the history API for now\n */\n\ndefine('nori/utils/Router',\n  function (require, module, exports) {\n\n    var Router = function () {\n\n      var _subject  = new Rx.Subject(),\n          _hashChangeObservable,\n          _objUtils = require('nudoru/core/ObjectUtils');\n\n      /**\n       * Set event handlers\n       */\n      function initialize() {\n        _hashChangeObservable = Rx.Observable.fromEvent(window, 'hashchange').subscribe(notifySubscribers);\n      }\n\n      /**\n       * subscribe a handler to the url change events\n       * @param handler\n       * @returns {*}\n       */\n      function subscribe(handler) {\n        return _subject.subscribe(handler);\n      }\n\n      /**\n       * Notify of a change in route\n       * @param fromApp True if the route was caused by an app event not URL or history change\n       */\n      function notifySubscribers() {\n        var eventPayload = {\n          routeObj: getCurrentRoute(), // { route:, data: }\n          fragment: getURLFragment()\n        };\n\n        _subject.onNext(eventPayload);\n      }\n\n      /**\n       * Parses the route and query string from the current URL fragment\n       * @returns {{route: string, query: {}}}\n       */\n      function getCurrentRoute() {\n        var fragment    = getURLFragment(),\n            parts       = fragment.split('?'),\n            route       = '/' + parts[0],\n            queryStr    = decodeURIComponent(parts[1]),\n            queryStrObj = parseQueryStr(queryStr);\n\n        if (queryStr === '=undefined') {\n          queryStrObj = {};\n        }\n\n        return {route: route, data: queryStrObj};\n      }\n\n      /**\n       * Parses a query string into key/value pairs\n       * @param queryStr\n       * @returns {{}}\n       */\n      function parseQueryStr(queryStr) {\n        var obj   = {},\n            parts = queryStr.split('&');\n\n        parts.forEach(function (pairStr) {\n          var pairArr     = pairStr.split('=');\n          obj[pairArr[0]] = pairArr[1];\n        });\n\n        return obj;\n      }\n\n      /**\n       * Combines a route and data object into a proper URL hash fragment\n       * @param route\n       * @param dataObj\n       */\n      function set(route, dataObj) {\n        var path = route,\n            data = [];\n        if (!_objUtils.isNull(dataObj)) {\n          path += \"?\";\n          for (var prop in dataObj) {\n            if (prop !== 'undefined' && dataObj.hasOwnProperty(prop)) {\n              data.push(prop + '=' + encodeURIComponent(dataObj[prop]));\n            }\n          }\n          path += data.join('&');\n        }\n\n        updateURLFragment(path);\n      }\n\n      /**\n       * Returns everything after the 'whatever.html#' in the URL\n       * Leading and trailing slashes are removed\n       * @returns {string}\n       */\n      function getURLFragment() {\n        var fragment = location.hash.slice(1);\n        return fragment.toString().replace(/\\/$/, '').replace(/^\\//, '');\n      }\n\n      /**\n       * Set the URL hash fragment\n       * @param path\n       */\n      function updateURLFragment(path) {\n        window.location.hash = path;\n      }\n\n      return {\n        initialize       : initialize,\n        subscribe        : subscribe,\n        notifySubscribers: notifySubscribers,\n        getCurrentRoute  : getCurrentRoute,\n        set              : set\n      };\n\n    };\n\n    var r = Router();\n    r.initialize();\n\n    module.exports = r;\n\n  });","define('nori/utils/Rx',\n  function (require, module, exports) {\n\n    module.exports = {\n      dom: function (selector, event) {\n        var el = document.querySelector(selector);\n        if (!el) {\n          console.warn('nori/utils/Rx, dom, invalid DOM selector: ' + selector);\n          return;\n        }\n        return Rx.Observable.fromEvent(el, event.trim());\n      },\n\n      from: function (ittr) {\n        return Rx.Observable.from(ittr);\n      },\n\n      interval: function (ms) {\n        return Rx.Observable.interval(ms);\n      },\n\n      doEvery: function(ms, handler) {\n        return this.interval(ms).subscribe(handler);\n      },\n\n      just: function (value) {\n        return Rx.Observable.just(value);\n      },\n\n      empty: function() {\n        return Rx.Observable.empty();\n      }\n\n    };\n\n  });","/*\n Simple wrapper for Underscore / HTML templates\n Matt Perkins\n 4/7/15\n */\ndefine('nori/utils/Templating',\n  function (require, module, exports) {\n\n    var Templating = function () {\n\n      var _templateMap = Object.create(null),\n          _templateHTMLCache = Object.create(null),\n          _templateCache     = Object.create(null),\n          _DOMUtils          = require('nudoru/browser/DOMUtils');\n\n      function addTemplate(id,html) {\n        _templateMap[id] = html;\n      }\n\n      function getSourceFromTemplateMap(id) {\n        var source = _templateMap[id];\n        if(source) {\n          return cleanTemplateHTML(source);\n        }\n        return;\n      }\n\n      function getSourceFromHTML(id) {\n        var src = document.getElementById(id),\n            srchtml;\n\n        if (src) {\n          srchtml = src.innerHTML;\n        } else {\n          console.warn('nudoru/core/Templating, template not found: \"' + id + '\"');\n          srchtml = '<div>Template not found: '+id+'</div>';\n        }\n\n        return cleanTemplateHTML(srchtml);\n      }\n\n      /**\n       * Get the template html from the script tag with id\n       * @param id\n       * @returns {*}\n       */\n      function getSource(id) {\n        if (_templateHTMLCache[id]) {\n          return _templateHTMLCache[id];\n        }\n\n        var sourcehtml = getSourceFromTemplateMap(id);\n\n        if(!sourcehtml) {\n          sourcehtml = getSourceFromHTML(id);\n        }\n\n        _templateHTMLCache[id] = sourcehtml;\n        return sourcehtml;\n      }\n\n      /**\n       * Returns all IDs belonging to text/template type script tags\n       * @returns {Array}\n       */\n      function getAllTemplateIDs() {\n        var scriptTags = Array.prototype.slice.call(document.getElementsByTagName('script'), 0);\n\n        return scriptTags.filter(function (tag) {\n          return tag.getAttribute('type') === 'text/template';\n        }).map(function (tag) {\n          return tag.getAttribute('id');\n        });\n      }\n\n      /**\n       * Returns an underscore template\n       * @param id\n       * @returns {*}\n       */\n      function getTemplate(id) {\n        if (_templateCache[id]) {\n          return _templateCache[id];\n        }\n        var templ          = _.template(getSource(id));\n        _templateCache[id] = templ;\n        return templ;\n      }\n\n      /**\n       * Processes the template and returns HTML\n       * @param id\n       * @param obj\n       * @returns {*}\n       */\n      function asHTML(id, obj) {\n        var temp = getTemplate(id);\n        return temp(obj);\n      }\n\n      /**\n       * Processes the template and returns an HTML Element\n       * @param id\n       * @param obj\n       * @returns {*}\n       */\n      function asElement(id, obj) {\n        return _DOMUtils.HTMLStrToNode(asHTML(id, obj));\n      }\n\n      /**\n       * Cleans template HTML\n       */\n      function cleanTemplateHTML(str) {\n        return str.trim();\n      }\n\n      /**\n       * Remove returns, spaces and tabs\n       * @param str\n       * @returns {XML|string}\n       */\n      function removeWhiteSpace(str) {\n        return str.replace(/(\\r\\n|\\n|\\r|\\t)/gm, '').replace(/>\\s+</g, '><');\n      }\n\n      /**\n       * Iterate over all templates, clean them up and log\n       * Util for SharePoint projects, <script> blocks aren't allowed\n       * So this helps create the blocks for insertion in to the DOM\n       */\n      function processForDOMInsertion() {\n        var ids = getAllTemplateIDs();\n        ids.forEach(function (id) {\n          var src = removeWhiteSpace(getSource(id));\n          console.log(id, src);\n        });\n      }\n\n      /**\n       * Add a template script tag to the DOM\n       * Util for SharePoint projects, <script> blocks aren't allowed\n       * @param id\n       * @param html\n       */\n      //function addClientSideTemplateToDOM(id, html) {\n      //  var s       = document.createElement('script');\n      //  s.type      = 'text/template';\n      //  s.id        = id;\n      //  s.innerHTML = html;\n      //  document.getElementsByTagName('head')[0].appendChild(s);\n      //}\n\n      return {\n        addTemplate           : addTemplate,\n        getSource             : getSource,\n        getAllTemplateIDs     : getAllTemplateIDs,\n        processForDOMInsertion: processForDOMInsertion,\n        getTemplate           : getTemplate,\n        asHTML                : asHTML,\n        asElement             : asElement\n      };\n\n    };\n\n    module.exports = Templating();\n\n  });\n","define('nori/action/ActionConstants',\n  function (require, module, exports) {\n    var objUtils = require('nudoru/core/ObjectUtils');\n\n    _.merge(module.exports, objUtils.keyMirror({\n      CHANGE_STORE_STATE     : null\n    }));\n\n  });","/**\n * Action Creator\n * Based on Flux Actions\n * For more information and guidelines: https://github.com/acdlite/flux-standard-action\n */\n\ndefine('nori/action/ActionCreator',\n  function (require, module, exports) {\n\n    var _noriActionConstants = require('nori/action/ActionConstants');\n\n    var NoriActionCreator = {\n\n      changeStoreState: function (data, id) {\n        var action = {\n          type   : _noriActionConstants.CHANGE_STORE_STATE,\n          payload: {\n            id  : id,\n            data: data\n          }\n        };\n\n        return action;\n      }\n\n    };\n\n    module.exports = NoriActionCreator;\n\n  });","/**\n * Ajax / Rest module.\n * Returns an RxJS Obervable\n *\n * Usage:\n *\n var request = require('nori/service/Rest');\n\n var getSub = request.request({\n        method: 'GET',\n        url   : '/items',\n        json  : true\n      }).subscribe(\n function success(data) {\n          console.log('ok', data);\n        },\n function error(data) {\n          console.log('err', data);\n        });\n\n var postSub = request.request({\n        method: 'POST',\n        url   : '/items',\n        data  : JSON.stringify({key: 'value'}),\n        json  : true\n      }).subscribe(\n function success(data) {\n          console.log('ok', data);\n        },\n function error(data) {\n          console.log('err', data);\n        });\n\n var putSub = request.request({\n        method: 'PUT',\n        url   : '/items/42',\n        data  : JSON.stringify({key: 'value'}),\n        json  : true\n      }).subscribe(\n function success(data) {\n          console.log('ok', data);\n        },\n function error(data) {\n          console.log('err', data);\n        });\n\n var delSub = request.request({\n        method: 'DELETE',\n        url   : '/items/42',\n        json  : true\n      }).subscribe(\n function success(data) {\n          console.log('ok', data);\n        },\n function error(data) {\n          console.log('err', data);\n        });\n *\n */\n\ndefine('nori/service/Rest',\n  function (require, module, exports) {\n\n    /**\n     * Ajax requst using Promises\n     * @param reqObj\n     * @param success\n     * @param error\n     */\n    var Rest = function () {\n\n      function request(reqObj) {\n\n        var xhr    = new XMLHttpRequest(),\n            json   = reqObj.json || false,\n            method = reqObj.method.toUpperCase() || 'GET',\n            url    = reqObj.url,\n            data   = reqObj.data || null;\n\n        return new Rx.Observable.create(function makeReq(observer) {\n          xhr.open(method, url, true);\n\n          xhr.onreadystatechange = function () {\n            if (xhr.readyState === 4) {\n              if (xhr.status >= 200 && xhr.status < 300) {\n                try {\n                  if (json) {\n                    observer.onNext(JSON.parse(xhr.responseText));\n                  } else {\n                    observer.onError(xhr.responseText);\n                  }\n                }\n                catch (e) {\n                  handleError('Result', 'Error parsing result. Status: ' + xhr.status + ', Response: ' + xhr.response);\n                }\n              } else {\n                handleError(xhr.status, xhr.statusText);\n              }\n            }\n          };\n\n          xhr.onerror   = function () {\n            handleError('Network error');\n          };\n          xhr.ontimeout = function () {\n            handleError('Timeout');\n          };\n          xhr.onabort   = function () {\n            handleError('About');\n          };\n\n          // set non json header? 'application/x-www-form-urlencoded; charset=UTF-8'\n          if (json && method !== \"GET\") {\n            xhr.setRequestHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n          } else if (json && method === \"GET\") {\n            //, text/*\n            xhr.setRequestHeader(\"Accept\", \"application/json; odata=verbose\");  // odata param for Sharepoint\n          }\n\n          xhr.send(data);\n\n          function handleError(type, message) {\n            message = message || '';\n            observer.onError(type + ' ' + message);\n          }\n        });\n      }\n\n      return {\n        request: request\n      };\n\n    };\n\n    module.exports = Rest();\n\n  });","define('nori/service/SocketIO',\n  function (require, module, exports) {\n\n    var SocketIOConnector = function () {\n\n      var _subject  = new Rx.BehaviorSubject(),\n          _socketIO = io(),\n          _events   = {\n            PING             : 'ping',\n            PONG             : 'pong',\n            NOTIFY_CLIENT    : 'notify_client',\n            NOTIFY_SERVER    : 'notify_server',\n            CONNECT          : 'connect',\n            DROPPED          : 'dropped',\n            USER_CONNECTED   : 'user_connected',\n            USER_DISCONNECTED: 'user_disconnected',\n            EMIT             : 'emit',\n            BROADCAST        : 'broadcast',\n            SYSTEM_MESSAGE   : 'system_message',\n            MESSAGE          : 'message',\n            CREATE_ROOM      : 'create_room',\n            JOIN_ROOM        : 'join_room',\n            LEAVE_ROOM       : 'leave_room'\n          };\n\n\n      function initialize() {\n        _socketIO.on(_events.NOTIFY_CLIENT, onNotifyClient);\n      }\n\n      /**\n       * All notifications from Socket.io come here\n       * @param payload {type, id, time, payload}\n       */\n      function onNotifyClient(payload) {\n        if (payload.type === _events.PING) {\n          notifyServer(_events.PONG, {});\n        } else if (payload.type === _events.PONG) {\n          console.log('SOCKET.IO PONG!');\n        }\n        notifySubscribers(payload);\n      }\n\n      function ping() {\n        notifyServer(_events.PING, {});\n      }\n\n      /**\n       * All communications to the server should go through here\n       * @param type\n       * @param payload\n       */\n      function notifyServer(type, payload) {\n        _socketIO.emit(_events.NOTIFY_SERVER, {\n          type   : type,\n          payload: payload\n        });\n      }\n\n      //function emit(message, payload) {\n      //  message = message || _events.MESSAGE;\n      //  payload = payload || {};\n      //  _socketIO.emit(message, payload);\n      //}\n      //\n      //function on(event, handler) {\n      //  _socketIO.on(event, handler);\n      //}\n\n      /**\n       * Subscribe handler to updates\n       * @param handler\n       * @returns {*}\n       */\n      function subscribe(handler) {\n        return _subject.subscribe(handler);\n      }\n\n      /**\n       * Called from update or whatever function to dispatch to subscribers\n       * @param payload\n       */\n      function notifySubscribers(payload) {\n        _subject.onNext(payload);\n      }\n\n      /**\n       * Gets the last payload that was dispatched to subscribers\n       * @returns {*}\n       */\n      function getLastNotification() {\n        return _subject.getValue();\n      }\n\n      function getEventConstants() {\n        return _.assign({}, _events);\n      }\n\n      return {\n        events             : getEventConstants,\n        initialize         : initialize,\n        ping               : ping,\n        notifyServer       : notifyServer,\n        subscribe          : subscribe,\n        notifySubscribers  : notifySubscribers,\n        getLastNotification: getLastNotification\n      };\n\n    };\n\n    module.exports = SocketIOConnector();\n\n  });","/**\n * Map data type\n */\n\n\ndefine('nori/store/Map',\n  function (require, module, exports) {\n\n    var Map = function () {\n      var _this,\n          _id,\n          _parentCollection,\n          _dirty   = false,\n          _entries = [],\n          _map     = Object.create(null);\n\n      //----------------------------------------------------------------------------\n      //  Initialization\n      //----------------------------------------------------------------------------\n\n      function initialize(initObj) {\n        if (!initObj.id) {\n          throw new Error('Store must be init\\'d with an id');\n        }\n\n        _this = this;\n        _id   = initObj.id;\n\n        if (initObj.store) {\n          _dirty = true;\n          _map   = initObj.store;\n        } else if (initObj.json) {\n          setJSON(initObj.json);\n        }\n\n      }\n\n      /**\n       * Set map store from a JSON object\n       * @param jstr\n       */\n      function setJSON(jstr) {\n        _dirty = true;\n        try {\n          _map = JSON.parse(jstr);\n        } catch (e) {\n          throw new Error('MapCollection, error parsing JSON:', jstr, e);\n        }\n      }\n\n      function getID() {\n        return _id;\n      }\n\n      /**\n       * Erase it\n       */\n      function clear() {\n        _map   = {};\n        _dirty = true;\n      }\n\n      function isDirty() {\n        return _dirty;\n      }\n\n      function markClean() {\n        _dirty = false;\n      }\n\n      /**\n       * Set property or merge in new data\n       * @param key String = name of property to set, Object = will merge new props\n       * @param value String = value of property to set\n       */\n      function set(key, value) {\n\n        if (typeof key === 'object') {\n          _map = _.merge({}, _map, key);\n        } else {\n          _map[key] = value;\n        }\n\n        // Mark changed\n        _dirty = true;\n\n        dispatchChange('set_key');\n      }\n\n      /**\n       * Assuming that _map[key] is an object, this will set a property on it\n       * @param key\n       * @param prop\n       * @param data\n       */\n      function setKeyProp(key, prop, data) {\n        _map[key][prop] = data;\n\n        _dirty = true;\n        dispatchChange('set_key');\n      }\n\n      /**\n       * Returns a copy of the data\n       * @returns *\n       */\n      function get(key) {\n        var value = has(key) ? _map[key] : undefined;\n\n        if (value) {\n          value = _.cloneDeep(value);\n        }\n\n        return value;\n      }\n\n      /**\n       * Assuming that _map[key] is an object, this will get value\n       * @param key\n       * @param prop\n       * @returns {*}\n       */\n      function getKeyProp(key, prop) {\n        var valueObj = has(key) ? _map[key] : undefined,\n            value    = null;\n\n        if (valueObj) {\n          value = _.cloneDeep(valueObj[prop]);\n        }\n\n        return value;\n      }\n\n      /**\n       * Returns true of the key is present in the map\n       * @param key\n       * @returns {boolean}\n       */\n      function has(key) {\n        return _map.hasOwnProperty(key);\n      }\n\n      /**\n       * Returns an array of the key/values. Results are cached and only regenerated\n       * if changed (set)\n       * @returns {Array}\n       */\n      function entries() {\n        if (!_dirty && _entries) {\n          return _entries;\n        }\n\n        var arry = [];\n        for (var key in _map) {\n          arry.push({key: key, value: _map[key]});\n        }\n\n        _entries = arry;\n        _dirty   = false;\n\n        return arry;\n      }\n\n      /**\n       * Number of entries\n       * @returns {Number}\n       */\n      function size() {\n        return keys().length;\n      }\n\n      /**\n       * Returns an array of all keys in the map\n       * @returns {Array}\n       */\n      function keys() {\n        return Object.keys(_map);\n      }\n\n      /**\n       * Returns an array of all vaules in the map\n       * @returns {Array}\n       */\n      function values() {\n        return entries().map(function (entry) {\n          return entry.value;\n        });\n      }\n\n      /**\n       * Remove a value\n       * @param key\n       */\n      function remove(key) {\n        delete _map[key];\n      }\n\n      /**\n       * Returns matches to the predicate function\n       * @param predicate\n       * @returns {Array.<T>}\n       */\n      function filterValues(predicate) {\n        return values().filter(predicate);\n      }\n\n      function first() {\n        return entries()[0];\n      }\n\n      function last() {\n        var e = entries();\n        return e[e.length - 1];\n      }\n\n      function getAtIndex(i) {\n        return entries()[i];\n      }\n\n      /**\n       * Returns a copy of the data map\n       * @returns {void|*}\n       */\n      function toObject() {\n        return _.merge({}, _map);\n      }\n\n      /**\n       * Return a new object by \"translating\" the properties of the map from one key to another\n       * @param tObj {currentProp, newProp}\n       */\n      function transform(tObj) {\n        var transformed = Object.create(null);\n\n        for (var prop in tObj) {\n          if (_map.hasOwnProperty(prop)) {\n            transformed[tObj[prop]] = _map[prop];\n          }\n        }\n\n        return transformed;\n      }\n\n      /**\n       * On change, emit event globally\n       */\n      function dispatchChange(type) {\n        var payload = {\n          id     : _id,\n          mapType: 'store'\n        };\n\n        _this.notifySubscribers(payload);\n\n        if (_parentCollection.dispatchChange) {\n          _parentCollection.dispatchChange({\n            id: _id\n          }, (type || 'map'));\n        }\n\n      }\n\n      function toJSON() {\n        return JSON.stringify(_map);\n      }\n\n      function setParentCollection(collection) {\n        _parentCollection = collection;\n      }\n\n      function getParentCollection() {\n        return _parentCollection;\n      }\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        initialize         : initialize,\n        getID              : getID,\n        clear              : clear,\n        isDirty            : isDirty,\n        markClean          : markClean,\n        setJSON            : setJSON,\n        set                : set,\n        setKeyProp         : setKeyProp,\n        get                : get,\n        getKeyProp         : getKeyProp,\n        has                : has,\n        remove             : remove,\n        keys               : keys,\n        values             : values,\n        entries            : entries,\n        filterValues       : filterValues,\n        size               : size,\n        first              : first,\n        last               : last,\n        getAtIndex         : getAtIndex,\n        toObject           : toObject,\n        transform          : transform,\n        toJSON             : toJSON,\n        setParentCollection: setParentCollection,\n        getParentCollection: getParentCollection\n      };\n\n    };\n\n    module.exports = Map;\n\n  });","/**\n * Map Collection - an array of maps\n */\n\ndefine('nori/store/MapCollection',\n  function (require, module, exports) {\n\n    var MapCollection = function () {\n      var _this,\n          _id,\n          _parentCollection,\n          _caret    = 0,\n          _children = [];\n\n      //----------------------------------------------------------------------------\n      //  Initialization\n      //----------------------------------------------------------------------------\n\n      function initialize(initObj) {\n        if (!initObj.id) {\n          throw new Error('StoreCollection must be init\\'d with an id');\n        }\n\n        _this = this;\n        _id   = initObj.id;\n\n        // TODO test\n        if (initObj.stores) {\n          addMapsFromArray.call(_this, initObj.stores);\n        }\n      }\n\n      //----------------------------------------------------------------------------\n      //  Iterator\n      //----------------------------------------------------------------------------\n\n      function next() {\n        var ret = {};\n        if (hasNext()) {\n          ret = {value: _children[_caret++], done: !hasNext()};\n        } else {\n          ret = current();\n        }\n\n        return ret;\n      }\n\n      function current() {\n        return {value: _children[_caret], done: !hasNext()};\n      }\n\n      function rewind() {\n        _caret = 0;\n        return _children[_caret];\n      }\n\n      function hasNext() {\n        return _caret < _children.length;\n      }\n\n      //----------------------------------------------------------------------------\n      //  Impl\n      //----------------------------------------------------------------------------\n\n      function isDirty() {\n        var dirty = false;\n        forEach(function checkDirty(map) {\n          if (map.isDirty()) {\n            dirty = true;\n          }\n        });\n        return dirty;\n      }\n\n      function markClean() {\n        forEach(function checkDirty(map) {\n          map.markClean();\n        });\n      }\n\n      /**\n       * Add an array of Store instances\n       * @param sArry\n       */\n      function addMapsFromArray(sArry) {\n        sArry.forEach(function (store) {\n          add(store);\n        });\n      }\n\n      /**\n       * Create an add child Store stores from an array of objects\n       * @param array Array of objects\n       * @param idKey Key on each object to use for the ID of that Store store\n       */\n      function addFromObjArray(oArry, idKey) {\n        oArry.forEach(function (obj) {\n\n          var id;\n\n          if (obj.hasOwnProperty(idKey)) {\n            id = obj[idKey];\n          } else {\n            id = _id + 'child' + _children.length;\n          }\n\n          add(Nori.store().createMap({id: id, store: obj}));\n        });\n        dispatchChange(_id, 'add_map');\n      }\n\n      function addFromJSONArray(json, idKey) {\n        json.forEach(function (jstr) {\n\n          var id, obj;\n\n          try {\n            obj = JSON.parse(jstr);\n          } catch (e) {\n            throw new Error('MapCollection, error parsing JSON:', jstr, e);\n          }\n\n          if (obj.hasOwnProperty(idKey)) {\n            id = obj[idKey];\n          } else {\n            id = _id + 'child' + _children.length;\n          }\n\n          add(Nori.store().createMap({id: id, store: obj}));\n        });\n        dispatchChange(_id, 'add_map');\n      }\n\n      function getID() {\n        return _id;\n      }\n\n      function add(store) {\n        var currIdx = getMapIndex(store.getID());\n\n        store.setParentCollection(_this);\n\n        if (currIdx >= 0) {\n          _children[currIdx] = store;\n        } else {\n          _children.push(store);\n        }\n\n        dispatchChange(_id, 'add_map');\n      }\n\n      /**\n       * Remove a store from the collection\n       * @param storeID\n       */\n      function remove(storeID) {\n        var currIdx = getMapIndex(storeID);\n        if (currIdx >= 0) {\n          _children[currIdx].setParentCollection(null);\n          _children[currIdx] = null;\n          _children.splice(currIdx, 1);\n          dispatchChange(_id, 'remove_map');\n        } else {\n          console.log(_id + ' remove, store not in collection: ' + storeID);\n        }\n      }\n\n      /**\n       * Remove all stores from the array\n       */\n      function removeAll() {\n        _children.forEach(function (map) {\n          map.setParentCollection(null);\n        });\n\n        _children = [];\n        dispatchChange(_id, 'remove_map');\n      }\n\n      /**\n       * Gets the Store by ID\n       * @param storeID\n       * @returns {T}\n       */\n      function getMap(storeID) {\n        return _children.filter(function (store) {\n          return store.getID() === storeID;\n        })[0];\n      }\n\n      /**\n       * Get the index in _children array by Store's ID\n       * @param storeID\n       * @returns {number}\n       */\n      function getMapIndex(storeID) {\n        return _children.map(function (store) {\n          return store.getID();\n        }).indexOf(storeID);\n      }\n\n      /**\n       * On change, emit event globally\n       */\n      function dispatchChange(data, type) {\n        var payload = {\n          id     : _id,\n          type   : type || '',\n          mapType: 'collection',\n          mapID  : data.id\n        };\n\n        _this.notifySubscribers(payload);\n\n        if (_parentCollection) {\n          _parentCollection.dispatchChange({id: _id, store: getMap()});\n        }\n      }\n\n      function hasMap(storeID) {\n        return _children[storeID];\n      }\n\n      /**\n       * Number of entries\n       * @returns {Number}\n       */\n      function size() {\n        return _children.length;\n      }\n\n      function first() {\n        return _children[0];\n      }\n\n      function last() {\n        return _children[_children.length - 1];\n      }\n\n      function atIndex(i) {\n        return _children[i];\n      }\n\n      /**\n       * Runs a predidate on each child map\n       * @param predicate\n       * @returns {Array.<T>}\n       */\n      function filter(predicate) {\n        return _children.filter(predicate);\n      }\n\n      /**\n       * Returns maps where the filter matches the prop / value pair\n       * @param key\n       * @param value\n       * @returns {Array.<T>}\n       */\n      function filterByKey(key, value) {\n        return _children.filter(function (map) {\n          return map.get(key) === value;\n        });\n      }\n\n      function forEach(func) {\n        return _children.forEach(func);\n      }\n\n      function map(func) {\n        return _children.map(func);\n      }\n\n      /**\n       * Return an array of entries of each map\n       * @returns {Array}\n       */\n      function entries() {\n        var arry = [];\n        _children.forEach(function (map) {\n          arry.push(map.entries());\n        });\n        return arry;\n      }\n\n      function toJSON() {\n        return JSON.stringify(_children);\n      }\n\n      function setParentCollection(collection) {\n        _parentCollection = collection;\n      }\n\n      function getParentCollection() {\n        return _parentCollection;\n      }\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        initialize         : initialize,\n        current            : current,\n        next               : next,\n        hasNext            : hasNext,\n        rewind             : rewind,\n        getID              : getID,\n        isDirty            : isDirty,\n        markClean          : markClean,\n        add                : add,\n        addMapsFromArray   : addMapsFromArray,\n        addFromObjArray    : addFromObjArray,\n        addFromJSONArray   : addFromJSONArray,\n        remove             : remove,\n        removeAll          : removeAll,\n        getMap             : getMap,\n        hasMap             : hasMap,\n        size               : size,\n        first              : first,\n        last               : last,\n        atIndex            : atIndex,\n        filter             : filter,\n        filterByKey        : filterByKey,\n        forEach            : forEach,\n        map                : map,\n        entries            : entries,\n        toJSON             : toJSON,\n        dispatchChange     : dispatchChange,\n        setParentCollection: setParentCollection,\n        getParentCollection: getParentCollection\n      };\n    };\n\n    module.exports = MapCollection;\n\n\n  });","define('nori/store/MixinMapFactory',\n  function (require, module, exports) {\n\n    var MixinMapFactory = function () {\n\n      var _mapCollectionList = Object.create(null),\n          _mapList           = Object.create(null),\n          _mapCollectionFactory = require('nori/store/MapCollection'),\n          _mapFactory = require('nori/store/Map'),\n          _observableFactory = require('nori/utils/MixinObservableSubject');\n\n      /**\n       * Create a new store collection and initalize\n       * @param initObj\n       * @param extras\n       * @returns {*}\n       */\n      function createMapCollection(initObj, extras) {\n        var m = Nori.assignArray({}, [_mapCollectionFactory(), _observableFactory(), extras]);\n        m.initialize(initObj);\n        return m;\n      }\n\n      /**\n       * Create a new store and initialize\n       * @param initObj\n       * @param extras\n       * @returns {*}\n       */\n      function createMap(initObj, extras) {\n        var m = Nori.assignArray({}, [_mapFactory(), _observableFactory(), extras]);\n        m.initialize(initObj);\n        return m;\n      }\n\n      /**\n       * Get a store from the application collection\n       * @param storeID\n       * @returns {void|*}\n       */\n      function getMap(storeID) {\n        return _mapList[storeID];\n      }\n\n      /**\n       * Get a store collection from the application collection\n       * @param storeID\n       * @returns {void|*}\n       */\n      function getMapCollection(storeID) {\n        return _mapCollectionList[storeID];\n      }\n\n      return {\n        createMapCollection: createMapCollection,\n        createMap          : createMap,\n        getMap             : getMap,\n        getMapCollection   : getMapCollection\n      };\n\n    };\n\n\n    module.exports = MixinMapFactory();\n\n  });","/**\n * Mixin for Nori stores to add functionality similar to Redux' Reducer and single\n * object state tree concept. Mixin should be composed to nori/store/ApplicationStore\n * during creation of main AppStore\n *\n * https://gaearon.github.io/redux/docs/api/Store.html\n * https://gaearon.github.io/redux/docs/basics/Reducers.html\n *\n * Created 8/13/15\n */\n\ndefine('nori/store/MixinReducerStore',\n  function (require, module, exports) {\n\n    var MixinReducerStore = function () {\n      var _this,\n          _state,\n          _stateReducers       = [],\n          _noriActionConstants = require('nori/action/ActionConstants');\n\n      //----------------------------------------------------------------------------\n      //  Accessors\n      //----------------------------------------------------------------------------\n\n      /**\n       * _state might not exist if subscribers are added before this store is initialized\n       */\n      function getState() {\n        if (_state) {\n          return _state.getState();\n        }\n        return {};\n      }\n\n      function setState(state) {\n        if (!_.isEqual(state, _state)) {\n          _state.setState(state);\n          _this.notifySubscribers({});\n        }\n      }\n\n      function setReducers(reducerArray) {\n        _stateReducers = reducerArray;\n      }\n\n      function addReducer(reducer) {\n        _stateReducers.push(reducer);\n      }\n\n      //----------------------------------------------------------------------------\n      //  Init\n      //----------------------------------------------------------------------------\n\n      /**\n       * Set up event listener/receiver\n       */\n      function initializeReducerStore() {\n        if (!this.createSubject) {\n          console.warn('nori/store/MixinReducerStore needs nori/utils/MixinObservableSubject to notify');\n        }\n\n        var simpleStoreFactory = require('nori/store/SimpleStore');\n\n        _this  = this;\n        _state = simpleStoreFactory();\n\n        if (!_stateReducers) {\n          throw new Error('ReducerStore, must set a reducer before initialization');\n        }\n\n        // Set initial state from empty event\n        applyReducers({});\n      }\n\n      /**\n       * Apply the action object to the reducers to change state\n       * are sent to all reducers to update the state\n       * @param actionObject\n       */\n      function apply(actionObject) {\n        console.log('ReducerStore Apply: ', actionObject.type, actionObject.payload);\n        applyReducers(actionObject);\n      }\n\n      function applyReducers(actionObject) {\n        var nextState = applyReducersToState(getState(), actionObject);\n        setState(nextState);\n        _this.handleStateMutation();\n      }\n\n      /**\n       * API hook to handle state updates\n       */\n      function handleStateMutation() {\n        // override this\n      }\n\n      /**\n       * Creates a new state from the combined reduces and action object\n       * Store state isn't modified, current state is passed in and mutated state returned\n       * @param state\n       * @param action\n       * @returns {*|{}}\n       */\n      function applyReducersToState(state, action) {\n        state = state || {};\n        // TODO should this actually use array.reduce()?\n        _stateReducers.forEach(function applyStateReducerFunction(reducerFunc) {\n          state = reducerFunc(state, action);\n        });\n        return state;\n      }\n\n      /**\n       * Template reducer function\n       * Store state isn't modified, current state is passed in and mutated state returned\n\n       function templateReducerFunction(state, event) {\n        state = state || {};\n        switch (event.type) {\n          case _noriActionConstants.MODEL_DATA_CHANGED:\n            // can compose other reducers\n            // return _.assign({}, state, otherStateTransformer(state));\n            return _.assign({}, state, {prop: event.payload.value});\n          default:\n            return state;\n        }\n      }\n       */\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        initializeReducerStore: initializeReducerStore,\n        getState              : getState,\n        setState              : setState,\n        apply                 : apply,\n        setReducers           : setReducers,\n        addReducer            : addReducer,\n        applyReducers         : applyReducers,\n        applyReducersToState  : applyReducersToState,\n        handleStateMutation   : handleStateMutation\n      };\n\n    };\n\n    module.exports = MixinReducerStore();\n\n  });","define('nori/store/SimpleStore',\n  function (require, module, exports) {\n\n    var SimpleStore = function () {\n      var _internalState   = Object.create(null);\n\n      /**\n       * Return a copy of the state\n       * @returns {void|*}\n       */\n      function getState() {\n        return _.assign({}, _internalState);\n      }\n\n      /**\n       * Sets the state\n       * @param nextState\n       */\n      function setState(nextState) {\n        _internalState = _.assign(_internalState, nextState);\n      }\n\n      return {\n        getState : getState,\n        setState : setState\n      };\n\n    };\n\n    module.exports = SimpleStore;\n\n  });","define('nori/view/ApplicationView',\n  function (require, module, exports) {\n\n    var ApplicationView = function () {\n\n      var _this,\n          _domUtils = require('nudoru/browser/DOMUtils');\n\n      //----------------------------------------------------------------------------\n      //  Initialization\n      //----------------------------------------------------------------------------\n\n      /**\n       * Initialize\n       * @param scaffoldTemplates template IDs to attached to the body for the app\n       */\n      function initializeApplicationView(scaffoldTemplates) {\n        _this = this;\n\n        attachApplicationScaffolding(scaffoldTemplates);\n      }\n\n      /**\n       * Attach app HTML structure\n       * @param templates\n       */\n      function attachApplicationScaffolding(templates) {\n        if (!templates) {\n          return;\n        }\n\n        var bodyEl = document.querySelector('body');\n\n        templates.forEach(function (templ) {\n          bodyEl.appendChild(_domUtils.HTMLStrToNode(_this.template().getSource('template__' + templ, {})));\n        });\n      }\n\n      /**\n       * After app initialization, remove the loading message\n       */\n      function removeLoadingMessage() {\n        var cover   = document.querySelector('#initialization__cover'),\n            message = document.querySelector('.initialization__message');\n\n        TweenLite.to(cover, 1, {\n          alpha: 0, ease: Quad.easeOut, onComplete: function () {\n            cover.parentNode.removeChild(cover);\n          }\n        });\n\n        TweenLite.to(message, 2, {\n          top: \"+=50px\", ease: Quad.easeIn, onComplete: function () {\n            cover.removeChild(message);\n          }\n        });\n      }\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        initializeApplicationView: initializeApplicationView,\n        removeLoadingMessage     : removeLoadingMessage\n      };\n\n    };\n\n    module.exports = ApplicationView();\n\n  });","define('nori/view/MixinBrowserEvents',\n  function (require, module, exports) {\n\n    var MixinBrowserEvents = function () {\n\n      var _scrollableAppContainer,\n          _browserScrollStream,\n          _browserResizeStream;\n\n      //----------------------------------------------------------------------------\n      //  Initialization\n      //----------------------------------------------------------------------------\n\n      function initializeBrowserEvents(scrollcontainer) {\n        if(!this.createSubject) {\n          console.warn('nori/view/MixinBrowserEvents needs nori/utils/MixinObservableSubject to notify');\n        }\n\n        if(scrollcontainer) {\n          setMainScrollingView(scrollcontainer);\n        } else {\n          _scrollableAppContainer = document;\n        }\n\n        createBrowserEventStreams.bind(this)();\n\n        this.createSubject('browserScroll');\n        this.createSubject('browserResize');\n      }\n\n      /**\n       * Set up RxJS streams for events\n       */\n      function createBrowserEventStreams() {\n        _browserResizeStream = Rx.Observable.fromEvent(window, 'resize')\n          .throttle(100)\n          .subscribe(handleViewPortResize.bind(this));\n\n        _browserScrollStream = Rx.Observable.fromEvent(_scrollableAppContainer, 'scroll')\n          .throttle(100)\n          .subscribe(handleViewPortScroll.bind(this));\n      }\n\n      function handleViewPortResize() {\n        this.notifySubscribersOf('browserResize', getCurrentViewPortSize());\n      }\n\n      function handleViewPortScroll() {\n        this.notifySubscribersOf('browserScroll', getCurrentViewPortScroll());\n      }\n\n      function getCurrentViewPortSize() {\n        return {\n          width : window.innerWidth,\n          height: window.innerHeight\n        };\n      }\n\n      function getCurrentViewPortScroll() {\n        var scrollEL = _scrollableAppContainer ? _scrollableAppContainer : document.body;\n\n        var left = scrollEL.scrollLeft,\n            top  = scrollEL.scrollTop;\n\n        left = left ? left : 0;\n        top  = top ? top : 0;\n\n        return {left: left, top: top};\n      }\n\n      function getMainScrollingView() {\n        return _scrollableAppContainer;\n      }\n\n      function setMainScrollingView(elID) {\n        _scrollableAppContainer = document.querySelector(elID);\n      }\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        initializeBrowserEvents : initializeBrowserEvents,\n        getMainScrollingView    : getMainScrollingView,\n        setMainScrollingView    : setMainScrollingView,\n        getCurrentViewPortSize  : getCurrentViewPortSize,\n        getCurrentViewPortScroll: getCurrentViewPortScroll\n      };\n\n    };\n\n    module.exports = MixinBrowserEvents();\n\n\n  });","/**\n * Mixin view that allows for component views\n */\n\ndefine('nori/view/MixinComponentViews',\n  function (require, module, exports) {\n\n    var MixinComponentViews = function () {\n\n      var _componentViewMap            = Object.create(null),\n          _componentHTMLTemplatePrefix = 'template__',\n          _template                    = require('nori/utils/Templating');\n\n      /**\n       * Return the template object\n       * @returns {*}\n       */\n      function getTemplate() {\n        return _template;\n      }\n\n      /**\n       * Map a component to a mounting point. If a string is passed,\n       * the correct object will be created from the factory method, otherwise,\n       * the passed component object is used.\n       *\n       * @param componentID\n       * @param componentIDorObj\n       * @param mountPoint\n       */\n      function mapViewComponent(componentID, componentIDorObj, mountPoint) {\n        var componentObj;\n\n        if (typeof componentIDorObj === 'string') {\n          var componentFactory = require(componentIDorObj);\n          componentObj         = createComponentView(componentFactory())();\n        } else {\n          componentObj = componentIDorObj;\n        }\n\n        _componentViewMap[componentID] = {\n          htmlTemplate: _template.getTemplate(_componentHTMLTemplatePrefix + componentID),\n          controller  : componentObj,\n          mountPoint  : mountPoint\n        };\n      }\n\n      /**\n       * Factory to create component view modules by concating multiple source objects\n       * @param componentSource Custom module source\n       * @returns {*}\n       */\n      function createComponentView(componentSource) {\n        return function () {\n          var componentViewFactory  = require('nori/view/ViewComponent'),\n              eventDelegatorFactory = require('nori/view/MixinEventDelegator'),\n              observableFactory     = require('nori/utils/MixinObservableSubject'),\n              simpleStoreFactory    = require('nori/store/SimpleStore'),\n              componentAssembly, finalComponent, previousInitialize;\n\n          componentAssembly = [\n            componentViewFactory(),\n            eventDelegatorFactory(),\n            observableFactory(),\n            simpleStoreFactory(),\n            componentSource\n          ];\n\n          if (componentSource.mixins) {\n            componentAssembly = componentAssembly.concat(componentSource.mixins);\n          }\n\n          finalComponent = Nori.assignArray({}, componentAssembly);\n\n          // Compose a new initialize function by inserting call to component super module\n          previousInitialize        = finalComponent.initialize;\n          finalComponent.initialize = function initialize(initObj) {\n            finalComponent.initializeComponent(initObj);\n            previousInitialize.call(finalComponent, initObj);\n          };\n\n          return _.assign({}, finalComponent);\n        };\n      }\n\n      /**\n       * Show a mapped componentView\n       * @param componentID\n       * @param dataObj\n       */\n      function showViewComponent(componentID, mountPoint) {\n        var componentView = _componentViewMap[componentID];\n        if (!componentView) {\n          console.warn('No componentView mapped for id: ' + componentID);\n          return;\n        }\n\n        if (!componentView.controller.isInitialized()) {\n          mountPoint = mountPoint || componentView.mountPoint;\n          componentView.controller.initialize({\n            id        : componentID,\n            template  : componentView.htmlTemplate,\n            mountPoint: mountPoint\n          });\n        } else {\n          componentView.controller.update();\n        }\n\n        componentView.controller.componentRender();\n        componentView.controller.mount();\n      }\n\n      /**\n       * Returns a copy of the map object for component views\n       * @returns {null}\n       */\n      function getComponentViewMap() {\n        return _.assign({}, _componentViewMap);\n      }\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        template           : getTemplate,\n        mapViewComponent   : mapViewComponent,\n        createComponentView: createComponentView,\n        showViewComponent  : showViewComponent,\n        getComponentViewMap: getComponentViewMap\n      };\n\n    };\n\n    module.exports = MixinComponentViews();\n\n  });","/**\n * Convenience mixin that makes events easier for views\n *\n * Based on Backbone\n * Review this http://blog.marionettejs.com/2015/02/12/understanding-the-event-hash/index.html\n *\n * Example:\n * this.setEvents({\n *        'click #btn_main_projects': handleProjectsButton,\n *        'click #btn_foo, click #btn_bar': handleFooBarButtons\n *      });\n * this.delegateEvents();\n *\n */\n\ndefine('nori/view/MixinEventDelegator',\n  function (require, module, exports) {\n\n    var MixinEventDelegator = function () {\n\n      var _eventsMap,\n          _eventSubscribers,\n          _rx = require('nori/utils/Rx');\n\n      function setEvents(evtObj) {\n        _eventsMap = evtObj;\n      }\n\n      function getEvents() {\n        return _eventsMap;\n      }\n\n      /**\n       * Automates setting events on DOM elements.\n       * 'evtStr selector':callback\n       * 'evtStr selector, evtStr selector': sharedCallback\n       */\n      function delegateEvents() {\n        if (!_eventsMap) {\n          return;\n        }\n\n        _eventSubscribers = Object.create(null);\n\n        for (var evtStrings in _eventsMap) {\n          if (_eventsMap.hasOwnProperty(evtStrings)) {\n\n            var mappings    = evtStrings.split(','),\n                eventHandler = _eventsMap[evtStrings];\n\n            if (!is.function(eventHandler)) {\n              console.warn('EventDelegator, handler for ' + evtStrings + ' is not a function');\n              return;\n            }\n\n            /* jshint -W083 */\n            // https://jslinterrors.com/dont-make-functions-within-a-loop\n            mappings.forEach(function (evtMap) {\n              evtMap = evtMap.trim();\n              var eventStr = evtMap.split(' ')[0].trim(),\n                  selector = evtMap.split(' ')[1].trim();\n              _eventSubscribers[evtStrings] = createHandler(selector, eventStr, eventHandler);\n            });\n            /* jshint +W083 */\n          }\n        }\n      }\n\n      function createHandler(selector, eventStr, eventHandler) {\n        return _rx.dom(selector, eventStr).subscribe(eventHandler);\n      }\n\n      /**\n       * Cleanly remove events\n       */\n      function undelegateEvents() {\n        if (!_eventsMap) {\n          return;\n        }\n\n        for (var event in _eventSubscribers) {\n          _eventSubscribers[event].dispose();\n          delete _eventSubscribers[event];\n        }\n\n        _eventSubscribers = Object.create(null);\n      }\n\n      return {\n        setEvents       : setEvents,\n        getEvents       : getEvents,\n        undelegateEvents: undelegateEvents,\n        delegateEvents  : delegateEvents\n      };\n\n    };\n\n    module.exports = MixinEventDelegator;\n\n  });","/**\n * Mixin view that allows for component views to be display on store state changes\n */\n\ndefine('nori/view/MixinStoreStateViews',\n  function (require, module, exports) {\n\n    var MixinStoreStateViews = function () {\n\n      var _this,\n          _watchedStore,\n          _currentViewID,\n          _currentStoreState,\n          _stateViewMountPoint,\n          _stateViewIDMap = Object.create(null);\n\n      /**\n       * Set up listeners\n       */\n      function initializeStateViews(store) {\n        _this = this; // mitigation, Due to events, scope may be set to the window object\n        _watchedStore = store;\n\n        this.createSubject('viewChange');\n\n        _watchedStore.subscribe(function onStateChange() {\n          handleStateChange();\n        });\n      }\n\n      /**\n       * Show route from URL hash on change\n       * @param routeObj\n       */\n      function handleStateChange() {\n        showViewForCurrentStoreState();\n      }\n\n      function showViewForCurrentStoreState() {\n        var state = _watchedStore.getState().currentState;\n        if (state) {\n          if (state !== _currentStoreState) {\n            _currentStoreState = state;\n            showStateViewComponent.bind(_this)(_currentStoreState);\n          }\n        }\n      }\n\n      /**\n       * Set the location for the view to mount on route changes, any contents will\n       * be removed prior\n       * @param elID\n       */\n      function setViewMountPoint(elID) {\n        _stateViewMountPoint = elID;\n      }\n\n      function getViewMountPoint() {\n        return _stateViewMountPoint;\n      }\n\n      /**\n       * Map a route to a module view controller\n       * @param templateID\n       * @param componentIDorObj\n       */\n      function mapStateToViewComponent(state, templateID, componentIDorObj) {\n        _stateViewIDMap[state] = templateID;\n        this.mapViewComponent(templateID, componentIDorObj, _stateViewMountPoint);\n      }\n\n      /**\n       * Show a view (in response to a route change)\n       * @param state\n       */\n      function showStateViewComponent(state) {\n        var componentID = _stateViewIDMap[state];\n        if (!componentID) {\n          console.warn(\"No view mapped for route: \" + state);\n          return;\n        }\n\n        removeCurrentView();\n\n        _currentViewID = componentID;\n        this.showViewComponent(_currentViewID);\n\n        // Transition new view in\n        TweenLite.set(_stateViewMountPoint, {alpha: 0});\n        TweenLite.to(_stateViewMountPoint, 0.25, {alpha: 1, ease: Quad.easeIn});\n\n        this.notifySubscribersOf('viewChange', componentID);\n      }\n\n      /**\n       * Remove the currently displayed view\n       */\n      function removeCurrentView() {\n        if (_currentViewID) {\n          _this.getComponentViewMap()[_currentViewID].controller.unmount();\n        }\n        _currentViewID = '';\n      }\n\n      return {\n        initializeStateViews        : initializeStateViews,\n        showViewForCurrentStoreState: showViewForCurrentStoreState,\n        showStateViewComponent      : showStateViewComponent,\n        setViewMountPoint           : setViewMountPoint,\n        getViewMountPoint           : getViewMountPoint,\n        mapStateToViewComponent     : mapStateToViewComponent\n      };\n\n    };\n\n    module.exports = MixinStoreStateViews();\n\n  });","define('nori/view/MixinNudoruControls',\n  function (require, module, exports) {\n\n    var MixinNudoruControls = function () {\n\n      var _notificationView  = require('nudoru/component/ToastView'),\n          _toolTipView       = require('nudoru/component/ToolTipView'),\n          _messageBoxView    = require('nudoru/component/MessageBoxView'),\n          _messageBoxCreator = require('nudoru/component/MessageBoxCreator'),\n          _modalCoverView    = require('nudoru/component/ModalCoverView');\n\n      function initializeNudoruControls() {\n        _toolTipView.initialize('tooltip__container');\n        _notificationView.initialize('toast__container');\n        _messageBoxView.initialize('messagebox__container');\n        _modalCoverView.initialize();\n      }\n\n      function mbCreator() {\n        return _messageBoxCreator;\n      }\n\n      function addMessageBox(obj) {\n        return _messageBoxView.add(obj);\n      }\n\n      function removeMessageBox(id) {\n        _messageBoxView.remove(id);\n      }\n\n      function alert(message, title) {\n        return mbCreator().alert(title || 'Alert', message);\n      }\n\n      function addNotification(obj) {\n        return _notificationView.add(obj);\n      }\n\n      function notify(message, title, type) {\n        return addNotification({\n          title  : title || '',\n          type   : type || _notificationView.type().DEFAULT,\n          message: message\n        });\n      }\n\n      return {\n        initializeNudoruControls: initializeNudoruControls,\n        mbCreator               : mbCreator,\n        addMessageBox           : addMessageBox,\n        removeMessageBox        : removeMessageBox,\n        addNotification         : addNotification,\n        alert                   : alert,\n        notify                  : notify\n      };\n\n    };\n\n    module.exports = MixinNudoruControls();\n\n  });","/**\n * Mixin view that allows for component views to be display on routing changes\n */\n\ndefine('nori/view/MixinRouteViews',\n  function (require, module, exports) {\n\n    var MixinRouteViews = function () {\n\n      var _this,\n          _currentRouteViewID,\n          _routeViewMountPoint,\n          _routeViewIDMap = Object.create(null);\n\n      /**\n       * Set up listeners\n       */\n      function initializeRouteViews() {\n        _this = this; // mitigation, Due to events, scope may be set to the window object\n\n        this.createSubject('viewChange');\n\n        Nori.router().subscribe(function onRouteChange(payload) {\n          handleRouteChange(payload.routeObj);\n        });\n      }\n\n      /**\n       * Show route from URL hash on change\n       * @param routeObj\n       */\n      function handleRouteChange(routeObj) {\n        showRouteViewComponent.bind(_this)(routeObj.route);\n      }\n\n      /**\n       * Typically on app startup, show the view assigned to the current URL hash\n       *\n       * @param silent If true, will not notify subscribers of the change, prevents\n       * double showing on initial load\n       */\n      function showViewFromURLHash(silent) {\n        this.showRouteViewComponent(Nori.getCurrentRoute().route);\n        if (!silent) {\n          Nori.router().notifySubscribers();\n        }\n      }\n\n      /**\n       * Set the location for the view to mount on route changes, any contents will\n       * be removed prior\n       * @param elID\n       */\n      function setViewMountPoint(elID) {\n        _routeViewMountPoint = elID;\n      }\n\n      function getViewMountPoint() {\n        return _routeViewMountPoint;\n      }\n\n      /**\n       * Map a route to a module view controller\n       * @param templateID\n       * @param componentIDorObj\n       */\n      function mapRouteToViewComponent(route, templateID, componentIDorObj) {\n        _routeViewIDMap[route] = templateID;\n        this.mapViewComponent(templateID, componentIDorObj, _routeViewMountPoint);\n      }\n\n      /**\n       * Show a view (in response to a route change)\n       * @param route\n       */\n      function showRouteViewComponent(route) {\n        var componentID = _routeViewIDMap[route];\n        if (!componentID) {\n          console.warn(\"No view mapped for route: \" + route);\n          return;\n        }\n\n        removeCurrentRouteView();\n\n        _currentRouteViewID = componentID;\n        this.showViewComponent(_currentRouteViewID);\n\n        // Transition new view in\n        TweenLite.set(_routeViewMountPoint, {alpha: 0});\n        TweenLite.to(_routeViewMountPoint, 0.25, {alpha: 1, ease: Quad.easeIn});\n\n        this.notifySubscribersOf('viewChange', componentID);\n      }\n\n      /**\n       * Remove the currently displayed view\n       */\n      function removeCurrentRouteView() {\n        if (_currentRouteViewID) {\n          _this.getComponentViewMap()[_currentRouteViewID].controller.unmount();\n        }\n        _currentRouteViewID = '';\n      }\n\n      return {\n        initializeRouteViews   : initializeRouteViews,\n        showViewFromURLHash    : showViewFromURLHash,\n        showRouteViewComponent : showRouteViewComponent,\n        setViewMountPoint : setViewMountPoint,\n        getViewMountPoint : getViewMountPoint,\n        mapRouteToViewComponent: mapRouteToViewComponent\n      };\n\n    };\n\n    module.exports = MixinRouteViews();\n\n  });","/**\n * Base module for components\n * Must be extended with custom modules\n */\n\ndefine('nori/view/ViewComponent',\n  function (require, module, exports) {\n\n    var ViewComponent = function () {\n\n      var _isInitialized = false,\n          _configProps,\n          _id,\n          _templateObj,\n          _html,\n          _DOMElement,\n          _mountPoint,\n          _children      = [],\n          _isMounted     = false,\n          _renderer      = require('nori/utils/Renderer');\n\n      /**\n       * Initialization\n       * @param configProps\n       */\n      function initializeComponent(configProps) {\n        _configProps = configProps;\n        _id          = configProps.id;\n        _templateObj = configProps.template;\n        _mountPoint  = configProps.mountPoint;\n\n        this.setState(this.getInitialState());\n        this.setEvents(this.defineEvents());\n\n        this.createSubject('update');\n        this.createSubject('mount');\n        this.createSubject('unmount');\n\n        _isInitialized = true;\n      }\n\n      function defineEvents() {\n        return undefined;\n      }\n\n      /**\n       * Bind updates to the map ID to this view's update\n       * @param mapIDorObj Object to subscribe to or ID. Should implement nori/store/MixinObservableStore\n       */\n      function bindMap(mapIDorObj) {\n        var map;\n\n        if (is.object(mapIDorObj)) {\n          map = mapIDorObj;\n        } else {\n          map = Nori.store().getMap(mapIDorObj) || Nori.store().getMapCollection(mapIDorObj);\n        }\n\n        if (!map) {\n          console.warn('ViewComponent bindMap, map or mapcollection not found: ' + mapIDorObj);\n          return;\n        }\n\n        if (!is.function(map.subscribe)) {\n          console.warn('ViewComponent bindMap, map or mapcollection must be observable: ' + mapIDorObj);\n          return;\n        }\n\n        map.subscribe(this.update.bind(this));\n      }\n\n      /**\n       * Add a child\n       * @param child\n       */\n      //function addChild(child) {\n      //  _children.push(child);\n      //}\n\n      /**\n       * Remove a child\n       * @param child\n       */\n      //function removeChild(child) {\n      //  var idx = _children.indexOf(child);\n      //  _children[idx].unmount();\n      //  _children.splice(idx, 1);\n      //}\n\n      /**\n       * Before the view updates and a rerender occurs\n       * Returns nextState of component\n       */\n      function componentWillUpdate() {\n        return this.getState();\n      }\n\n      function update() {\n        var currentState = this.getState();\n        var nextState    = this.componentWillUpdate();\n\n        if (this.shouldComponentUpdate(nextState)) {\n          this.setState(nextState);\n          //_children.forEach(function updateChild(child) {\n          //  child.update();\n          //});\n\n          if (_isMounted) {\n            if (this.shouldComponentRender(currentState)) {\n              this.unmount();\n              this.componentRender();\n              this.mount();\n            }\n          }\n          this.notifySubscribersOf('update', this.getID());\n        }\n      }\n\n      /**\n       * Compare current state and next state to determine if updating should occur\n       * @param nextState\n       * @returns {*}\n       */\n      function shouldComponentUpdate(nextState) {\n        return is.existy(nextState);\n      }\n\n      /**\n       * Render it, need to add it to a parent container, handled in higher level view\n       * @returns {*}\n       */\n      function componentRender() {\n        //_children.forEach(function renderChild(child) {\n        //  child.componentRender();\n        //});\n\n        _html = this.render(this.getState());\n\n      }\n\n      /**\n       * May be overridden in a submodule for custom rendering\n       * Should return HTML\n       * @returns {*}\n       */\n      function render(state) {\n        return _templateObj(state);\n      }\n\n      /**\n       * Append it to a parent element\n       * @param mountEl\n       */\n      function mount() {\n        if (!_html) {\n          throw new Error('Component ' + _id + ' cannot mount with no HTML. Call render() first?');\n        }\n\n        _isMounted = true;\n\n        _DOMElement = (_renderer.render({\n          target: _mountPoint,\n          html  : _html\n        }));\n\n        if (this.delegateEvents) {\n          this.delegateEvents();\n        }\n\n        if (this.componentDidMount) {\n          this.componentDidMount();\n        }\n\n        this.notifySubscribersOf('mount', this.getID());\n      }\n\n      /**\n       * Call after it's been added to a view\n       */\n      function componentDidMount() {\n        // stub\n      }\n\n      /**\n       * Call when unloading\n       */\n      function componentWillUnmount() {\n        // stub\n      }\n\n      function unmount() {\n        this.componentWillUnmount();\n        _isMounted = false;\n\n        if (this.undelegateEvents) {\n          this.undelegateEvents();\n        }\n\n        _renderer.render({\n          target: _mountPoint,\n          html  : ''\n        });\n\n        _html       = '';\n        _DOMElement = null;\n        this.notifySubscribersOf('unmount', this.getID());\n      }\n\n      //----------------------------------------------------------------------------\n      //  Accessors\n      //----------------------------------------------------------------------------\n\n      function isInitialized() {\n        return _isInitialized;\n      }\n\n      function getConfigProps() {\n        return _configProps;\n      }\n\n      function isMounted() {\n        return _isMounted;\n      }\n\n      function getInitialState() {\n        this.setState({});\n      }\n\n      function getID() {\n        return _id;\n      }\n\n      function getDOMElement() {\n        return _DOMElement;\n      }\n\n      function getTemplate() {\n        return _templateObj;\n      }\n\n      function setTemplate(html) {\n        _templateObj = _.template(html);\n      }\n\n      //function getChildren() {\n      //  return _children.slice(0);\n      //}\n\n\n      //----------------------------------------------------------------------------\n      //  API\n      //----------------------------------------------------------------------------\n\n      return {\n        initializeComponent: initializeComponent,\n        defineEvents       : defineEvents,\n        isInitialized      : isInitialized,\n        getConfigProps     : getConfigProps,\n        getInitialState    : getInitialState,\n        getID              : getID,\n        getTemplate        : getTemplate,\n        setTemplate        : setTemplate,\n        getDOMElement      : getDOMElement,\n        isMounted          : isMounted,\n\n        bindMap: bindMap,\n\n        componentWillUpdate  : componentWillUpdate,\n        shouldComponentUpdate: shouldComponentUpdate,\n        update               : update,\n\n        componentRender: componentRender,\n        render         : render,\n\n        mount            : mount,\n        componentDidMount: componentDidMount,\n\n        componentWillUnmount: componentWillUnmount,\n        unmount             : unmount\n\n        //addChild   : addChild,\n        //removeChild: removeChild,\n        //getChildren: getChildren\n      };\n\n    };\n\n    module.exports = ViewComponent;\n\n  });","var Nori = (function () {\n\n  var _dispatcher = require('nori/utils/Dispatcher'),\n      _router     = require('nori/utils/Router');\n\n  // Switch Lodash to use Mustache style templates\n  _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\n  //----------------------------------------------------------------------------\n  //  Accessors\n  //----------------------------------------------------------------------------\n\n  function getDispatcher() {\n    return _dispatcher;\n  }\n\n  function getRouter() {\n    return _router;\n  }\n\n  function getConfig() {\n    return _.assign({}, (window.APP_CONFIG_DATA || {}));\n  }\n\n  function getCurrentRoute() {\n    return _router.getCurrentRoute();\n  }\n\n  //----------------------------------------------------------------------------\n  //  Factories - concatenative inheritance, decorators\n  //----------------------------------------------------------------------------\n\n  /**\n   * Merges a collection of objects\n   * @param target\n   * @param sourceArray\n   * @returns {*}\n   */\n  function assignArray(target, sourceArray) {\n    sourceArray.forEach(function (source) {\n      target = _.assign(target, source);\n    });\n    return target;\n  }\n\n  /**\n   * Create a new Nori application instance\n   * @param custom\n   * @returns {*}\n   */\n  function createApplication(custom) {\n    custom.mixins.push(this);\n    return buildFromMixins(custom);\n  }\n\n  /**\n   * Creates main application store\n   * @param custom\n   * @returns {*}\n   */\n  function createStore(custom) {\n    return function cs() {\n      return _.assign({}, buildFromMixins(custom));\n    };\n  }\n\n  /**\n   * Creates main application view\n   * @param custom\n   * @returns {*}\n   */\n  function createView(custom) {\n    return function cv() {\n      return _.assign({}, buildFromMixins(custom));\n    };\n  }\n\n  /**\n   * Mixes in the modules specified in the custom application object\n   * @param sourceObject\n   * @returns {*}\n   */\n  function buildFromMixins(sourceObject) {\n    var mixins;\n\n    if (sourceObject.mixins) {\n      mixins = sourceObject.mixins;\n    }\n\n    mixins.push(sourceObject);\n    return assignArray({}, mixins);\n  }\n\n  //----------------------------------------------------------------------------\n  // Functional utils from Mithril\n  //  https://github.com/lhorie/mithril.js/blob/next/mithril.js\n  //----------------------------------------------------------------------------\n\n  // http://mithril.js.org/mithril.prop.html\n  function prop(store) {\n    //if (isFunction(store.then)) {\n    //  // handle a promise\n    //}\n    var gettersetter = function () {\n      if (arguments.length) {\n        store = arguments[0];\n      }\n      return store;\n    };\n\n    gettersetter.toJSON = function () {\n      return store;\n    };\n\n    return gettersetter;\n  }\n\n  // http://mithril.js.org/mithril.withAttr.html\n  function withAttr(prop, callback, context) {\n    return function (e) {\n      e = e || event;\n\n      var currentTarget = e.currentTarget || this,\n          cntx          = context || this;\n\n      callback.call(cntx, prop in currentTarget ? currentTarget[prop] : currentTarget.getAttribute(prop));\n    };\n  }\n\n  //----------------------------------------------------------------------------\n  //  API\n  //----------------------------------------------------------------------------\n\n  return {\n    config           : getConfig,\n    dispatcher       : getDispatcher,\n    router           : getRouter,\n    createApplication: createApplication,\n    createStore      : createStore,\n    createView       : createView,\n    buildFromMixins  : buildFromMixins,\n    getCurrentRoute  : getCurrentRoute,\n    assignArray      : assignArray,\n    prop             : prop,\n    withAttr         : withAttr\n  };\n\n}());\n\n\n"],"sourceRoot":"/source/"}